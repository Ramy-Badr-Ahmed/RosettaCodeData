program pisano_period;
    loop for p in [2..15] | prime p do
        print("pisanoPrime(" + lpad(str p,3) + ", 2) = "
                + lpad(str pisanoPrime(p,2), 3));
    end loop;
    print;

    loop for p in [2..180] | prime p do
        print("pisanoPrime(" + lpad(str p,3) + ", 1) = "
                + lpad(str pisanoPrime(p,1), 3));
    end loop;
    print;

    print("pisano(n) for integers 'n' from 1 to 180 are:");
    loop for n in [1..180] do
        nprint(lpad(str pisano n,4));
        if (col +:= 1) mod 15 = 0 then print; end if;
    end loop;

    op gcd(a, b);
        return {[0, a]}(b) ? (b gcd (a mod b));
    end op;

    op lcm(a, b);
        return a div (a gcd b) * b;
    end op;

    op factors(n);
        d := 2;
        f := {};
        loop while d <= n do
            loop while n mod d=0 do
                f(d) +:= 1;
                n div:= d;
            end loop;
            d +:= 1;
        end loop;
        return f;
    end op;

    op prime(n);
        if n<=4 then return n in {2,3}; end if;
        if n mod 2=0 then return n=2; end if;
        if n mod 3=0 then return n=3; end if;
        d := 5;
        loop while d*d <= n do
            if n mod d=0 then return false; end if;
            d +:= 2;
            if n mod d=0 then return false; end if;
            d +:= 4;
        end loop;
        return true;
    end op;

    op pisanoPeriod(n);
        [p, c, i] := [0, 1, 0];
        loop while i < n*n do
            [p, c] := [c, (p+c) mod n];
            i +:= 1;
            if p=0 and c=1 then return i; end if;
        end loop;
        return 1;
    end op;

    proc pisanoPrime(p, k);
        return if not prime p or k=0
            then om
            else p**(k-1) * pisanoPeriod p
        end;
    end proc;

    op pisano(m);
        primePowers := factors m;
        pps := [pisanoPrime(p, k) : k = primePowers(p)];
        if #pps = 0 then return 1; end if;
        if #pps = 1 then return pps(1); end if;
        return lcm/pps;
    end op;
end program;
